#/usr/bin/zsh

# ==============================================================================
# ======================   Aliases   ===========================================
# ==============================================================================

alias ls='ls --color=auto'
alias ll='ls -lhG'

alias nif='nvim $(fzf --reverse -m --preview \
                      "bat --style=numbers --color=always {} | head -100" \
                  || echo +qa)'

alias update_pacman_mirrors='sudo reflector --sort rate --protocol https \
      --fastest 50 --number 100 --save /etc/pacman.d/mirrorlist'

alias transr='transmission-remote'

alias fehf='feh --auto-rotate -.'

alias cdf='cd $(fd -t d | fzf)'

alias vid='vlc > /dev/null 2>&1'

alias nordc='nordvpn connect United_States New_York'
alias nordd='killall transmission-daemon; nordvpn d'

alias vim='nvim -u /dev/null'

alias luamake=~/pkg/lua-language-server/3rd/luamake/luamake

# ==============================================================================
# ======================   Completion   ========================================
# ==============================================================================

autoload -Uz compinit
compinit -d ~/.cache/zsh/zcompdump-$ZSH_VERSION

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval $(dircolors $HOME/.dotfiles/dir_colors)
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'


# ==============================================================================
# ======================   Exports   ===========================================
# ==============================================================================

export PATH=$PATH:$HOME/.cargo/bin
export PATH=$PATH:$HOME/bin
export PATH=$PATH:$HOME/.local/bin
export PATH=$PATH:$HOME/.config/fzf/bin

export LESS_TERMCAP_md=$(tput setaf 4)
export LESS_TERMCAP_mb=$(tput setaf 2)
# export LESS_TERMCAP_me=$(tput sgr0)
# export LESS_TERMCAP_so=$(tput setaf 2; tput setab 8)
# export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
# export LESS_TERMCAP_us=$(tput smul; tput setaf 7)
# export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)
# export LESS_TERMCAP_mr=$(tput rev)
# export LESS_TERMCAP_mh=$(tput dim)
# export LESS_TERMCAP_ZN=$(tput ssubm)
# export LESS_TERMCAP_ZV=$(tput rsubm)
# export LESS_TERMCAP_ZO=$(tput ssupm)
# export LESS_TERMCAP_ZW=$(tput rsupm)

export LESSHISTFILE="-"

# XDG
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

export VISUAL=nvim
export EDITOR=nvim

# fzf
export FZF_DEFAULT_COMMAND='fd --type f'

# {neo}vimrc
export VIMRC="$HOME/.vimrc"
export NEOVIMRC="$HOME/.config/nvim/init.vim"


# ==============================================================================
# ======================   Functions   =========================================
# ==============================================================================

function mkcd() {
  mkdir -p $1 && cd $1
}

function vlcf() {
  v="`fzf`"
  vlc $v 2>/dev/null &
}

function vpn_is_connected() {
  local vpn_status=$(nordvpn status | grep Status | awk '{print $NF}')
  if [ $vpn_status = "Connected" ]; then
    return 0
  else
    return 1
  fi
}

function transd() {
  if ! vpn_is_connected; then
    echo "no vpn connection. exiting."
  fi
  transmission-daemon
}


# ==============================================================================
# ======================   Fzf   ===============================================
# ==============================================================================

# auto completion
# ---------------
[[ $- == *i* ]] && source "$HOME/.config/fzf/shell/completion.zsh" 2> /dev/null

# key bindings
# ------------
FZF_KEYBINDING_SCRIPT="$HOME/.config/fzf/shell/key-bindings.zsh"
[ -f $FZF_KEYBINDING_SCRIPT ] && source $FZF_KEYBINDING_SCRIPT


# ==============================================================================
# ======================   History   ===========================================
# ==============================================================================

setopt histignorealldups
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=$XDG_DATA_HOME/zsh_history


# ==============================================================================
# ======================   Misc   ==============================================
# ==============================================================================

# Use vi keybindings.
bindkey -v

# Do not force prompt to start on a newline.
setopt NOPROMPT_CR

# Allow a comment as a zsh command.
setopt interactivecomments


# ==============================================================================
# ======================   Prompt   ============================================
# ==============================================================================

autoload -Uz vcs_info
setopt prompt_subst

# Only check for git. This might have some performance benefits.
zstyle ':vcs_info:*' enable git

# Needed for checking if {un}staged files exist.
zstyle ':vcs_info:*' check-for-changes true

# Formatting when {un}staged files exist in the branch.
zstyle ':vcs_info:*' unstagedstr '%F{3}'
zstyle ':vcs_info:*' stagedstr '%F{4}'

# Formatting for the git prompt if in a repo.
zstyle ':vcs_info:*' actionformats '[%F{2}%c%u%b %F{1}%a%f] '
zstyle ':vcs_info:*' formats '[%F{2}%c%u%b%f] '

precmd () { vcs_info }
PROMPT='%1~ ${vcs_info_msg_0_}%f> '


# ==============================================================================
# ======================   Plugins   ===========================================
# ==============================================================================
for plugin in $HOME/.dotfiles/zsh/plugins/**/*.plugin.zsh; do
  source $plugin
done

# syntax highlighting
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main)

typeset -A ZSH_HIGHLIGHT_STYLES
ZSH_HIGHLIGHT_STYLES[alias]='fg=blue'
ZSH_HIGHLIGHT_STYLES[builtin]='fg=blue'
ZSH_HIGHLIGHT_STYLES[command]='fg=blue'
ZSH_HIGHLIGHT_STYLES[commandseparator]='fg=magenta'
ZSH_HIGHLIGHT_STYLES[default]='fg=white'
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]='fg=green'
ZSH_HIGHLIGHT_STYLES[double-quoted-argument-unclosed]='fg=red'
ZSH_HIGHLIGHT_STYLES[function]='fg=blue'
ZSH_HIGHLIGHT_STYLES[path]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[reserved-word]='fg=magenta'
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]="fg=red,bold"
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]="fg=red,bold"
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]='fg=green'
ZSH_HIGHLIGHT_STYLES[single-quoted-argument-unclosed]='fg=red'
ZSH_HIGHLIGHT_STYLES[unknown-token]='fg=red'


# ==============================================================================
# ======================   Overrides   =========================================
# ==============================================================================

[ -f ~/.zshrc.local ] && source ~/.zshrc.local

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
